{"version":3,"sources":["components/Nav/index.js","components/Jumbotron/index.js","components/Grid/index.js","components/Input/index.js","components/Thumbnail/index.js","components/Button/index.js","components/BookList/index.js","utils/API.js","pages/Search.js","components/SavedList/index.js","pages/Saved.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","Jumbotron","children","style","height","clear","paddingTop","textAlign","Container","fluid","Row","Col","size","split","map","join","Input","props","marginBottom","type","Thumbnail","src","role","aria-label","backgroundImage","Button","click","value","onClick","BookList","BookListItem","image","title","authors","description","rel","target","link","id","apiKey","process","API_KEY","input","axios","get","delete","bookData","console","log","post","SearchPage","useState","books","setBooks","bookSearch","setBookSearch","handleSave","key","bookToSave","filter","book","etag","theBook","volumeInfo","imageLinks","thumbnail","searchInfo","textSnippet","infoLink","API","then","res","catch","err","name","onChange","event","placeholder","preventDefault","data","items","SavedPage","useEffect","getBooksDB","_id","id_","authros","cath","NoMatch","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.61557fef.chunk.js","sourcesContent":["\n\nimport React from \"react\";\nimport \"./style.css\"\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Google Books\n      </a>\n      <a className=\"navbar-item\" href=\"/\">\n        Search\n      </a>\n      <a className=\"navbar-item\" href=\"/saved\">\n        Saved\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\n\nfunction Input(props) {\n  return (\n    <div className=\"input-group input-group-lg\" style={{ marginBottom: 15 }}>\n      <input className=\"form-control\" type=\"text\" {...props} />\n    </div>\n  );\n}\n\nexport default Input;","import React from \"react\";\nimport \"./style.css\";\n\n// The Thumbnail component renders a div that uses some CSS to render a background image\n// It will always keep square proportions at any size without the image warping\n// The \"role\" and \"aria label\" are there to identify the element's purpose as an image for accessibility purposes\nfunction Thumbnail({ src }) {\n  return (\n    <div\n      className=\"thumbnail\"\n      role=\"img\"\n      aria-label=\"Book Image\"\n      style={{\n        backgroundImage: `url(${src})`\n      }}\n    />\n  );\n}\n\nexport default Thumbnail;\n","import React from \"react\";\n\n\nfunction Button( { type = \"default\", className, children, click, value }) {\n    return (\n        <button\n        onClick={click}\n        className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}\n        value={value}\n        > \n        {children}\n        </button>\n\n    );\n}\n\nexport default Button;","import React from \"react\";\nimport Thumbnail from \"../Thumbnail\";\nimport { Container, Row, Col } from \"../Grid\";\nimport Button from \"../Button\"\n\n// Exporting both BookList and BooklListItem from this file\n\n// BookList renders a bootstrap list item\nexport function BookList({ children }) {\n  return <ul className=\"list-group\">{children}</ul>;\n}\n\n// BookListItem renders a bootstrap list item containing data from the book api call\nexport function BookListItem(props) {\n \n  return (\n    <li className=\"list-group-item\" style = {{ marginBottom: 15 }}>\n      <Container>\n        <Row>\n          <Col size=\"xs-2 sm-2\">\n            <Thumbnail src={props.image|| \"https://placehold.it/300x300\"} />\n          </Col>\n          <Col size=\"xs-8 sm-9\">\n            <h3>{props.title}</h3>\n            <p><strong>By: </strong> {props.authors}</p>\n            <p>\n                {props.description || \"No description available for this book\"}\n            </p>\n            <a rel=\"noreferrer noopener\" target=\"_blank\" href={props.link}>\n                Click Here for More Details\n              \n            </a>\n          </Col>\n\n          <Col size =\"xs-2-sm-1\">\n              <Button\n                className={\"btn btn-primary\"}\n                click={props.click(props.id)}\n                value={props.id}\n              >\n                  Save\n              </Button>\n          </Col>\n          \n        </Row>\n      </Container>\n    </li>\n  );\n}","import axios from \"axios\";\n\nconst query =\"https://www.googleapis.com/books/v1/volumes?q=\"\nconst apiKey = process.env.API_KEY\n\nexport default {\n    searchBooks: function (input) {\n        return axios.get(query + input.split(\" \").join(\"+\") + apiKey)\n    },\n    getBooks: function () {\n        return axios.get(\"/api/books\");\n\n    },\n    deleteBook: function(id) {\n        return axios.delete(\"/api/books/\" + id);\n\n    },\n\n    saveBook: function (bookData) {\n        console.log(bookData)\n        return axios.post(\"/api/books\", bookData)\n    }\n}","  \nimport React, { useState } from \"react\";\n\n// COMPONENTS\nimport Nav from '../components/Nav'\nimport Jumbotron from \"../components/Jumbotron\"\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Input from \"../components/Input\"\nimport { BookList, BookListItem } from \"../components/BookList\"\nimport Button from \"../components/Button\"\nimport API from \"../utils/API\";\n\nexport default function SearchPage() {\n\n  const [books, setBooks] = useState([])\n  const [bookSearch, setBookSearch] = useState(\"\")\n\n  const handleInputChange = event => {\n    const { value } = event.target\n    setBookSearch(value)\n  }\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    API.searchBooks(bookSearch)\n      .then(res => {\n\n        console.log(res.data)\n        setBooks(res.data.items)\n      })\n      .catch(err => console.log(err))\n  }\n\n  const handleSave = key => {\n    console.log(\"save clicked\")\n\n    const bookToSave = books.filter(book => book.etag === key.target.value);\n\n\n    const theBook = {\n      title: bookToSave[0].volumeInfo.title,\n      authors: bookToSave[0].volumeInfo.authors,\n      image: bookToSave[0].volumeInfo.imageLinks.thumbnail,\n      description: bookToSave[0].searchInfo.textSnippet,\n      link: bookToSave[0].volumeInfo.infoLink\n\n    }\n\n    console.log(theBook)\n\n\n    API.saveBook(theBook)\n      .then(res => {\n        console.log(res)\n      })\n      .catch(err => console.log(err))\n\n\n  }\n\n  return (\n    <div>\n      <Nav />\n      <Jumbotron>\n        <h1>React Google Books Search</h1>\n        <h2>Search for and Save Books of Interest</h2>\n      </Jumbotron>\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Container>\n                <Row>\n                  <Col size=\"xs-9 sm-10\">\n                    <Input name=\"bookSearch\"\n                      value={bookSearch}\n                      onChange={handleInputChange}\n                      placeholder=\"Search for a Book\"\n                    />\n                  </Col>\n                  <Col size=\"xs-3 sm-2\">\n                    <Button\n                      click={handleFormSubmit}\n                      type=\"success\"\n                      className=\"input-lg\"\n                    >\n                      Search\n                    </Button>\n                  </Col>\n                </Row>\n              </Container>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"xs-12\">\n\n            {!books ? (\n              <h1 className=\"mt-4\">No Results</h1>\n            ) :\n              !bookSearch\n                ? (\n                  <h1 className=\"mt-4\">Perform a search to see results</h1>\n                ) : (\n                  <BookList>\n                    {books.map(book => (\n                      <BookListItem\n                        key={book.etag}\n                        id={book.etag}\n                        title={book.volumeInfo.title}\n                        authors={book.volumeInfo.authors}\n                        image={!book.volumeInfo?.imageLinks?.thumbnail ? (\n                          \"https://placehold.it/200x300\"\n                        ) : (\n                            book.volumeInfo.imageLinks.thumbnail\n                          )}\n                        description={!book.searchInfo?.textSnippet ? (\n                          \"No description of this book\"\n                        ) : (\n                            book.searchInfo.textSnippet\n                          )}\n\n                        link={book.volumeInfo.infoLink}\n                        click={() => handleSave}\n                      />\n                    ))}\n                  </BookList>\n                )\n            }\n          </Col>\n        </Row>\n\n      </Container>\n\n    </div>\n\n  )\n}","import React from \"react\";\nimport Thumbnail from \"../Thumbnail\";\nimport { Container, Row, Col } from \"../Grid\";\nimport Button from \"../Button\"\n\n// Exporting both BookList and BooklListItem from this file\n\n// BookList renders a bootstrap list item\nexport function BookList({ children }) {\n  return <ul className=\"list-group\">{children}</ul>;\n}\n\n// BookListItem renders a bootstrap list item containing data from the book api call\nexport function BookListItem(props) {\n \n  return (\n    <li className=\"list-group-item\" style = {{ marginBottom: 15 }}>\n      <Container>\n        <Row>\n          <Col size=\"xs-2 sm-2\">\n            <Thumbnail src={props.image} />\n          </Col>\n          <Col size=\"xs-8 sm-9\">\n            <h3>{props.title}</h3>\n            <p><strong>By: </strong> {props.authors}</p>\n            <p>\n                {props.description} \n            </p>\n            <a rel=\"noreferrer noopener\" target=\"_blank\" href={props.link}>\n                Click Here for More Details\n              \n            </a>\n          </Col>\n\n          <Col size =\"xs-2-sm-1\">\n              <Button\n                className={\"btn btn-primary\"}\n                click={props.click(props.id)}\n                value={props.id}\n              >\n                  Save\n              </Button>\n          </Col>\n          \n        </Row>\n      </Container>\n    </li>\n  );\n}","import React, { useState, useEffect } from \"react\";\n\n\nimport Nav from \"../components/Nav\"\nimport API from \"../utils/API\"\nimport Jumbotron from \"../components/Jumbotron\";\nimport  { Col, Row, Container }  from \"../components/Grid\";\nimport { BookList, BookListItem } from \"../components/SavedList\";\n\n\n\n\nexport default function SavedPage() {\n    const [books,setBooks] = useState([])\n\n    useEffect (() => {\n        getBooksDB() \n\n    }, [])\n    const getBooksDB = () => {\n        API.getBooks()\n        .then(res => {\n            setBooks(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n\n    const deleteBook = (id) => {\n        API.deleteBook(id)\n        .then(res => getBooksDB()\n        .cath(err => console.log(err)))\n    }\n    \n    return (\n        <div>\n            <Nav /> \n            <Jumbotron>\n                <h1> (React) Google Books Search</h1>\n                    <h2> Search for and Save Books of Interest\n        \n    \n                    </h2>\n                \n\n            </Jumbotron>\n            <Container>\n                <Row>\n                    <Col size=\"xs-12\">\n                        <BookList>\n                            {books.map(book => (\n                                <BookListItem\n                                    key={book._id} \n                                    id={book.id_}\n                                    title={book.title}\n                                    authors={book.authros}\n                                    image={book.image}\n                                    description={book.description}\n                                    link={book.link}\n                                    click={() => deleteBook(book._id)} \n                                    />\n                                 ))}\n                        </BookList>\n                    </Col>\n\n                </Row>\n            </Container>\n     \n      \n        </div>\n\n    )\n    \n}\n\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SearchPage from \"./pages/Search\";\nimport SavedPage from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n    \n      <Switch>\n        <Route exact path={[\"/\", \"/books\"]}>\n          <SearchPage />\n        </Route>\n        <Route exact path=\"/saved\">\n          <SavedPage />\n        </Route>\n        <Route>\n          <NoMatch />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}